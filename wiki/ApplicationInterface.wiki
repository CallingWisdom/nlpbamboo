#summary C应用程序接口
#labels Featured,Phase-Implementation
= C 语言 =

动态库: libbamboo.so

== 初始化 ==

{{{
void * bamboo_init(const char *cfg);
}}}

初始化bamboo。读入字典、加载各类处理模块。

=== 参数 ===

  * *cfg*: bamboo配置文件的路径。如果cfg = NULL，会按照./bamboo.cfg, ./etc/bamboo.cfg, /opt/etc/bamboo.cfg, /etc/bamboo.cfg的循序查找并加载第一个找到的配置文件。

=== 返回值 ===

如果初始化正确则返回bamboo的句柄，否则返回NULL.

== 分词 ==

{{{
size_t bamboo_parse(void *handle, char *t, const char *s);
}}}

进行分词

=== 参数 ===

  * *handle*: 由bamboo_init初始化好的句柄
  * *t*: 分词结果的字符串指针，空间由调用者分配
  * *s*: 待分词句子的字符串指针

=== 返回值 ===
如果分词正确则返回t的长度，否则返回-1

== 清理 ==

{{{
void bamboo_clean(void *handle);
}}}

销毁bamboo。从内存中卸载字典。

=== 参数 ===
  * *handle*: 由bamboo_init初始化好的句柄

== 设置 ==

{{{
void bamboo_set(const char *s)
}}}

设置bamboo行为

=== 参数 ===
  * *s*: 与bamboo.cfg语法相同的字符串

*注意*: _直到使用bamboo_reload之前，设置不会生效_

== 加载设置 ==

{{{
void bamboo_reload()
}}}

加载经过bamboo_set更新的设置


