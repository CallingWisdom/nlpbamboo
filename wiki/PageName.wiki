#summary C++应用程序接口
== 头文件 ==
/opt/bamboo/include/bamboo.hxx
== 动态库 ==
/opt/bamboo/lib/libbamboo.so
== Parser初始化 ==
{{{
bamboo::Parser bamboo_parser("const char *cfg");
}}}
* 初始化bamboo，根据cfg配置文件中的参数设置，加载字典以及各类处理模块
=== 参数 ===
* const char *cfg: bamboo配置文件的路径。如果cfg = NULL，会按照./bamboo.cfg, ./etc/bamboo.cfg, /opt/etc/bamboo.cfg, /etc/bamboo.cfg的循序查找并加载第一个找到的配置文件。
=== 返回值 ===
无
== Parser参数设置 ==

{{{
void bamboo_parser.set(std::string s)
void bamboo_parser.set(std::string key, std::string val)
}}}

设置bamboo处理流程，例如：

* bamboo_parser.set("process_chain=prepare, crf_seg, single_combine") --- 自定义处理链
* bamboo_parser.set("process_chain","$crf_sgmt_chain") --- 分词流程
* bamboo_parser.set("process_chain","$crf_ns_chain") --- 地名识别流程

*注意*: 直到使用bamboo_parser.reload之前，设置不会生效

== 使用Parser对象进行分词，实体词识别 ==
{{{
size_t bamboo_parser.parse(std::vector<Token> &vec, const char *s);
}}}
=== 参数 ===
* std::vector<Token> &vec：分词或者实体词识别的结果
* const char *s：需要处理的字符串
=== 返回值 ===
* size_t : 结果词数量